.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH Tss2_Tcti_Sgx_Init 3 "JANUARY 2019" Intel "TPM2 Software Stack"
.SH NAME
Tss2_Tcti_Sgx_init \- Initialization function for the SGX TCTI library.
.SH SYNOPSIS
.B #include <tss2/tss2-tcti-sgx.h>
.sp
.sp
.BI "TSS2_RC Tss2_Tcti_Sgx_Init (TSS2_TCTI_CONTEXT " "*tctiContext" ", size_t " "*size" ", const char " "*conf" ");"
.sp
The
.BR  Tss2_Tcti_Sgx_Init ()
function initializes a TCTI context for use with an SGX enclave.
.SH DESCRIPTION
.BR Tss2_Tcti_Sgx_Init ()
attempts to initialize a caller allocated
.I tctiContext
of size
.I size
\&. Since the
.I tctiContext
must be a caller allocated buffer, the caller needs to know the size required
by the TCTI library. The minimum size of this context can be discovered by
providing
.BR NULL
for the
.I tctiContext
and a non-
.BR NULL
.I size
parameter. The initialization function will then populate the
.I size
parameter with the minimum size of the
.I tctiContext
buffer. The caller must then allocate a buffer of this size (or larger) and
call
.B Tss2_Tcti_Sgx_Init ()
again providing the newly allocated
.I tctiContext
and the size of this context in the
.I size
parameter. This pattern is common to all TCTI initialization functions. We
provide an example of this pattern using the
.BR Tss2_Tcti_Sgx_Init ()
function in the section titled
.B EXAMPLE.
.sp
The
.I conf
parameter is a C string. This parameter has no effect and is ignored.
.sp
Once initialized, the TCTI context returned exposes the Trusted Computing
Group (TCG) defined API for the lowest level communication with the TPM.
Using this API the caller can exchange (send / receive) TPM2 command and
response buffers with the TPM from within an SGX enclave.
.sp
TCG TSS 2.0 TPM Command
Transmission Interface (TCTI) API
Specification

For a more thorough discussion of the TCTI API see the \*(lqTCG TSS 2.0
TPM Command Transmission Interface (TCTI) API Specification\*(rq as
published by
the TCG:
\%https://trustedcomputinggroup.org/wp-content/uploads/TSS_TCTI_v1.0_r12_PUBLIC_REVIEW.pdf
.SH RETURN VALUE
A successful call to
.BR Tss2_Tcti_Sgx_Init ()
will return
.B TSS2_RC_SUCCESS.
An unsuccessful call will produce a response code described in section
.B ERRORS.
.SH ERRORS
.B TSS2_TCTI_RC_BAD_VALUE
is returned if any parameters contain unexpected values.
.B TSS2_TCTI_RC_BAD_REFERENCE
is returned if any parameters are NULL when they should not be.
.B TSS2_TCTI_RC_BAD_CONTEXT
is returned if the size of the provided
.i tctiContext
is insufficient.
.SH EXAMPLE
TCTI initialization fragment:
.sp
.nf
#include <stdlib.h>
#include <tss2/tss2-tcti-sgx.h>

TSS2_RC rc;
TSS2_TCTI_CONTEXT *tcti_context;
size_t size;

rc = Tss2_Tcti_Sgx_Init (NULL, &size, NULL);
if (rc != TSS2_RC_SUCCESS) {
    exit (EXIT_FAILURE);
}
tcti_context = calloc (1, size);
if (tcti_context == NULL) {
    exit (EXIT_FAILURE);
}
rc = Tss2_Tcti_Sgx_Init (&tcti_context, &size, NULL);
if (rc != TSS2_RC_SUCCESS) {
    free (tcti_context);
    exit (EXIT_FAILURE);
}
exit (EXIT_SUCCESS);
.fi
